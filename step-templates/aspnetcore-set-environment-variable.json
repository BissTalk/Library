{
  "Id": "c7f96ab8-a0d3-4f01-928e-c8cb78ab108c",
  "Name": "ASP.NET Core - set runtime environment variable via web.config",
  "Description": "e.g. https://docs.microsoft.com/en-us/aspnet/core/fundamentals/environments",
  "ActionType": "Octopus.Script",
  "Version": 1,
  "CommunityActionTemplateId": null,
  "Properties": {
    "Octopus.Action.Script.Syntax": "PowerShell",
    "Octopus.Action.Script.ScriptSource": "Inline",
    "Octopus.Action.RunOnServer": "false",
    "Octopus.Action.Script.ScriptBody": "Param(\r\n    [string]$WebConfigPath,\r\n    [string]$EnvironmentVariableName,\r\n    [string]$EnvironmentVariableValue\r\n)\r\n\r\nfunction Get-Parameter($Name, [switch]$Required, [switch]$TestPath) {\r\n\r\n    $result = $null\r\n\r\n    if ($OctopusParameters -ne $null) {\r\n        $result = $OctopusParameters[$Name]\r\n    }\r\n\r\n    if ($result -eq $null) {\r\n        $variable = Get-Variable $Name\r\n        if ($variable -ne $null) {\r\n            $result = $variable.Value\r\n        }\r\n    }\r\n\r\n    if ($result -eq $null -or $result -eq \"\") {\r\n        if ($Required) {\r\n            throw \"Missing parameter value $Name\"\r\n        }\r\n    }\r\n\r\n    if ($TestPath) {\r\n        if (!(Test-Path $result -PathType Leaf)) {\r\n            throw \"Could not find $result\"\r\n        }\r\n    }\r\n\r\n    return $result\r\n}\r\n\r\n& {\r\n    Param(\r\n        [string]$WebConfigPath,\r\n        [string]$EnvironmentVariableName,\r\n        [string]$EnvironmentVariableValue\r\n    )\r\n\r\n    $xml = (Get-Content $WebConfigPath) -as [Xml]\r\n    $environmentVariables = $xml.configuration.'system.webServer'.aspNetCore.environmentVariables\r\n    $environmentVariable = $environmentVariables.environmentVariable | Where-Object {$_.name -eq $EnvironmentVariableName}\r\n\r\n    if ($environmentVariable) {\r\n        $environmentVariable.value = $EnvironmentVariableValue\r\n    }\r\n    elseif ($environmentVariables) {\r\n        $environmentVariable = $xml.CreateElement(\"environmentVariable\");\r\n        $environmentVariable.SetAttribute(\"Name\", $EnvironmentVariableName);\r\n        $environmentVariable.SetAttribute(\"Value\", $EnvironmentVariableValue);\r\n        $x = $environmentVariables.AppendChild($environmentVariable)\r\n    }\r\n    else {\r\n        throw \"Could not find 'configuration/system.webServer/aspNetCore/environmentVariables' element in web.config\"\r\n    }\r\n\r\n    try {\r\n        $xml.Save((Resolve-Path $WebConfigPath))\r\n    }\r\n    catch {\r\n        throw \"Could not save web.config because: $_.Exception.Message\"\r\n    }\r\n} (Get-Parameter 'WebConfigPath' -Required -TestPath) (Get-Parameter 'EnvironmentVariableName' -Required) (Get-Parameter 'EnvironmentVariableValue' -Required)\r\n",
    "Octopus.Action.Script.ScriptFileName": null,
    "Octopus.Action.Package.FeedId": null,
    "Octopus.Action.Package.PackageId": null
  },
  "Parameters": [
    {
      "Id": "b1b74503-0f3d-4519-8ec6-d6a4aace9086",
      "Name": "WebConfigPath",
      "Label": "Web.Config Path",
      "HelpText": "Typically an output variable from a previous step",
      "DefaultValue": "",
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      },
      "Links": {}
    },
    {
      "Id": "5fe18f04-de84-445e-bb69-81ed0d39980f",
      "Name": "EnvironmentVariableName",
      "Label": "Environment Variable Name",
      "HelpText": "Name of environment variable to set",
      "DefaultValue": "",
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      },
      "Links": {}
    },
    {
      "Id": "c9099a01-7de3-4724-8d6d-e26d8bf0fd21",
      "Name": "EnvironmentVariableValue",
      "Label": "Environment Variable Value",
      "HelpText": "Value of environment variable to set",
      "DefaultValue": "",
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      },
      "Links": {}
    }
  ],
  "LastModifiedBy": "teamtam",
  "$Meta": {
    "ExportedAt": "2017-08-31T06:20:39.415Z",
    "OctopusVersion": "3.13.8",
    "Type": "ActionTemplate"
  },
  "Category": "dotnetcore"
}